{"version":3,"file":"static/js/664.717b281f.chunk.js","mappings":"4OAgBA,MAuEA,EAvEkBA,KAChB,MAAM,SACJC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAAAF,SAAC,+BACPF,EAAAA,EAAAA,MAAA,QAAMK,SAAUZ,GAtBHa,IACfR,GAASS,EAAAA,EAAAA,IAAmBD,IACzBE,SACAC,MAAK,KACJC,EAAAA,GAAAA,QAAc,sCAAuC,CACnDC,SAAU,WACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SACP,IAGNzB,GAAO,IAMkCQ,SAAA,EACrCF,EAAAA,EAAAA,MAACoB,EAAAA,GAAa,CAAAlB,SAAA,EACZC,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CAAAnB,UACLC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAACsB,EAAAA,GAAc,CAAApB,SAAA,EACbC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,IACA/B,EAAS,QAAS,CAAEgC,UAAU,IAClCC,KAAK,QACLC,YAAY,MAEdvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAAAzB,SAAC,WACVN,EAAOgC,QACNzB,EAAAA,EAAAA,KAAA,QAAM0B,MAAO,CAAEC,MAAO,OAAQ5B,SAAC,mCAKvCC,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CAAAnB,UACLC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAACsB,EAAAA,GAAc,CAAApB,SAAA,EACbC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,IACA/B,EAAS,WAAY,CAAEgC,UAAU,EAAMO,UAAW,IACtDN,KAAK,WACLC,YAAY,MAEdvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAAAzB,SAAC,cACVN,EAAOoC,WACN7B,EAAAA,EAAAA,KAAA,QAAM0B,MAAO,CAAEC,MAAO,OAAQ5B,SAAC,sCAMzCC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CAACR,KAAK,SAAQvB,SAAC,aAC1BC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAQ,CAACC,GAAI,YAAYjC,SAAC,wCAEnB,C,8JChFT,MAAMD,EAAYmC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iTAgBtBlC,EAAQgC,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,0EAMjBlB,EAAgBgB,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kGAO1BjB,EAASe,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uEAMnBhB,EAAiBc,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2FAO3Bf,EAAQa,EAAAA,GAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qVAiBpBX,EAAYS,EAAAA,GAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,ibAWhCf,EAKAA,EACAA,GAOSU,EAAaG,EAAAA,GAAAA,OAAaS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8rBAwB1BJ,GAAWE,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAeW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iF","sources":["pages/LoginPage/LoginPage.jsx","pages/RegisterPage/RegisterPage.styles.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { operationUserLogin } from 'redux/auth/operations';\nimport {\n  Container,\n  Title,\n  FormContainer,\n  FormEl,\n  InputContainer,\n  Input,\n  InputText,\n  FormButton,\n  TextLink,\n} from 'pages/RegisterPage/RegisterPage.styles';\nconst LoginPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(operationUserLogin(data))\n      .unwrap()\n      .then(() => {\n        toast.success('Hi! Login was successfully fetched!', {\n          position: 'top-left',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n        });\n      });\n\n    reset();\n  };\n\n  return (\n    <Container>\n      <Title>Login to personal account</Title>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormContainer>\n          <FormEl>\n            <label>\n              <InputContainer>\n                <Input\n                  {...register('email', { required: true })}\n                  type=\"email\"\n                  placeholder=\"\"\n                />\n                <InputText>Email*</InputText>\n                {errors.email && (\n                  <span style={{ color: 'red' }}>This field is required</span>\n                )}\n              </InputContainer>\n            </label>\n          </FormEl>\n          <FormEl>\n            <label>\n              <InputContainer>\n                <Input\n                  {...register('password', { required: true, minLength: 7 })}\n                  type=\"password\"\n                  placeholder=\"\"\n                />\n                <InputText>Password*</InputText>\n                {errors.password && (\n                  <span style={{ color: 'red' }}>This field is required</span>\n                )}\n              </InputContainer>\n            </label>\n          </FormEl>\n        </FormContainer>\n        <FormButton type=\"submit\">Sign In</FormButton>\n        <TextLink to={'/register'}>Don't have an account? Sign Up</TextLink>\n      </form>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 444px;\n  width: 100%;\n  margin-left: auto;\n  box-sizing: border-box;\n  margin-right: auto;\n  display: block;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-top: 64px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 25px;\n  line-height: 1.334;\n`;\n\nexport const FormContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: wrap;\n  margin-left: -16px;\n`;\n\nexport const FormEl = styled.div`\n  width: 100%;\n  padding-left: 16px;\n  padding-top: 16px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  gap: 7px;\n`;\n\nexport const Input = styled.input`\n  font: inherit;\n  letter-spacing: inherit;\n  color: currentcolor;\n  border: 1px solid gray;\n  border-radius: 10px;\n  box-sizing: content-box;\n  background: none;\n  height: 1.4375em;\n  margin: 0px;\n  -webkit-tap-highlight-color: transparent;\n  display: block;\n  min-width: 0px;\n  width: 100%;\n  padding: 16.5px 14px;\n`;\n\nexport const InputText = styled.span`\n  position: absolute;\n  left: 15px;\n  top: 20px;\n  color: black;\n  font-weight: 500;\n  transform-origin: left top;\n  transition: transform 0.9s ease;\n  background-color: white;\n  padding: 0;\n\n  ${Input}:not(:placeholder-shown) + & {\n    transform: translateY(-27px) scale(0.75);\n    padding: 0 5px;\n  }\n\n  ${Input}:hover + &,\n  ${Input}:focus + & {\n    transform: translateY(-27px) scale(0.75);\n    padding: 0 5px;\n  }\n`;\n\n\nexport const FormButton = styled.button`\n  border-radius: 20px;\n  margin: 24px 0px 16px;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  padding: 6px 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  color: white;\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  width: 100%;\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n  }\n`;\n\nexport const TextLink = styled(NavLink)`\n  margin-left: 10px;\n  margin-right: 10px;\n  color: rgb(59 130 246);\n`;\n"],"names":["LoginPage","register","handleSubmit","reset","formState","errors","useForm","dispatch","useDispatch","_jsxs","Container","children","_jsx","Title","onSubmit","data","operationUserLogin","unwrap","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","FormContainer","FormEl","InputContainer","Input","required","type","placeholder","InputText","email","style","color","minLength","password","FormButton","TextLink","to","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","NavLink","_templateObject9"],"sourceRoot":""}