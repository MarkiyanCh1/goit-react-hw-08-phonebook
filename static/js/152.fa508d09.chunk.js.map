{"version":3,"file":"static/js/152.fa508d09.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styles.js","components/ContactCard/ContactCard.styles.js","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.js","components/Filter/Filter.jsx","components/Error/Error.jsx","pages/ContactsPage.styles.js","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const Container = styled.div`\n  max-width: 444px;\n  width: 100%;\n  margin-left: auto;\n  box-sizing: border-box;\n  margin-right: auto;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-top: 15px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 25px;\n  line-height: 1.334;\n`;\n\nexport const FormContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: wrap;\n  margin-left: -16px;\n`;\n\nexport const FormEl = styled.div`\n  width: 100%;\n  padding-left: 16px;\n  padding-top: 16px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  gap: 7px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 20px;\n  letter-spacing: 1.2px;\n  color: black;\n  border: 1px solid gray;\n  border-radius: 10px;\n  box-sizing: content-box;\n  height: 35px;\n  margin: 0px;\n  padding: 16px 14px;\n`;\n\nexport const InputText = styled.span`\n  position: absolute;\n  left: 15px;\n  top: 20px;\n  color: black;\n  font-weight: 500;\n  transform-origin: left top;\n  transition: transform 0.9s ease;\n  background-color: white;\n  padding: 0;\n\n  ${Input}:not(:placeholder-shown) + & {\n    transform: translateY(-27px) scale(0.75);\n    padding: 0 5px;\n  }\n\n  ${Input}:hover + &,\n  ${Input}:focus + & {\n    transform: translateY(-27px) scale(0.75);\n    padding: 0 5px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  border-radius: 20px;\n  margin: 24px 0px 16px;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  padding: 6px 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  color: white;\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  width: 100%;\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  color: red;\n`;\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Form } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Container,\n  Title,\n  FormContainer,\n  FormEl,\n  InputContainer,\n  Input,\n  InputText,\n  ErrMessage,\n  FormButton,\n} from './ContactForm.styles';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { operationAddContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Invalid name format'\n    )\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required!'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\\\-\\s]?\\d{1,4}[ .\\\\-\\s]?\\d{1,4}[ .\\\\-\\s]?\\d{1,9}$/,\n      'Invalid number format'\n    )\n    .min(8, 'Too Short!')\n    .required('This field is required!'),\n});\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const addNewContact = newContact => {\n    const hasContact = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (hasContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    const finalContact = {\n      ...newContact,\n    };\n    dispatch(operationAddContact(finalContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n        id: nanoid(),\n      }}\n      validationSchema={contactSchema}\n      onSubmit={(values, actions, id) => {\n        addNewContact(values, id);\n        actions.resetForm({\n          values: {\n            name: '',\n            number: '',\n            id: nanoid(),\n          },\n        });\n      }}\n    >\n      <Container>\n        <Title>Add new contact</Title>\n        <Form>\n          <FormContainer>\n            <FormEl>\n              <label>\n                <InputContainer>\n                  <Input name=\"name\" required placeholder=\"\" />\n                  <InputText>Name*</InputText>\n                  <ErrMessage name=\"name\" component=\"div\" />\n                </InputContainer>\n              </label>\n            </FormEl>\n\n            <FormEl>\n              <label>\n                <InputContainer>\n                  <Input name=\"number\" placeholder=\"\" type=\"text\" />\n                  <InputText>Phone number*</InputText>\n                  <ErrMessage name=\"number\" component=\"div\" />\n                </InputContainer>\n              </label>\n            </FormEl>\n          </FormContainer>\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n      </Container>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 20px;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const ContactItem = styled.li`\n  width: 450px;\n  padding: 20px;\n  background: white;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  border-bottom: 1px solid lightGrey;\n  border-radius: 2px;\n  transition: all 0.3s ease-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 25px;\n  justify-content: space-between;\n`;\n\nexport const ButtonClose = styled.button`\n  width: 100px;\n  padding: 8px 16px;\n  border-radius: 70px;\n  color: #fff;\n  background-color: #0b7373;\n  text-transform: uppercase;\n  font-size: 15px;\n  letter-spacing: 1px;\n  transition: all 0.3s;\n  &:hover {\n    color: #459e9e;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  width: 485px;\n  justify-content: space-around;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  font-size: 25px;\n  font-weight: 500;\n  letter-spacing: -0.3px;\n`;\n\nexport const Phone = styled.p`\n  font-size: 20px;\n  letter-spacing: -0.3px;\n`;\n","import React from 'react';\nimport { CardWrapper, ButtonClose, InfoWrapper, Name, Phone } from './ContactCard.styles';\nimport { useDispatch } from 'react-redux';\nimport { operationDeleteContact } from 'redux/contacts/operations';\n\nconst ContactCard = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  return (\n    <CardWrapper>\n    <InfoWrapper>\n      <Name>{name}</Name>\n      <Phone>{number}</Phone>\n    </InfoWrapper>\n      <ButtonClose onClick={() => dispatch(operationDeleteContact(id))}>Delete</ButtonClose>\n    </CardWrapper>\n  );\n};\n\nexport default ContactCard;\n","import React from 'react';\nimport { List, ContactItem } from './ContactList.styles';\nimport ContactCard from '../ContactCard/ContactCard';\nimport { useSelector } from 'react-redux';\nimport { selectVisiableContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisiableContacts);\n\n  return (\n    <List>\n      {contacts.map(item => (\n        <ContactItem key={item.id}>\n          <ContactCard contact={item} />\n        </ContactItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 250px;\n  margin: 30px 90px;\n  padding: 10px;\n  border: 2px solid #beb6b6;\n  box-shadow: rgb(179 190 247) 0px 0px 2px 3px;\n`;\n\nexport const InputFilter = styled.input`\n  max-width: 380px;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  border: none;\n  border-bottom: 1px solid teal;\n  &:focus,\n  &:hover,\n  &:active {\n    outline: 0;\n    outline-offset: 0;\n    border: none;\n    border-bottom: 2px solid teal;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterWrapper, InputFilter } from './Filter.styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterWrapper>\n      <h3>Find contacts by name</h3>\n      <InputFilter\n        type=\"text\"\n        value={filter}\n        onChange={e => {\n          dispatch(setFilter(e.target.value));\n        }}\n        placeholder=\"Enter name...\"\n      />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/selectors';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <p>{error}</p>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 0 auto;\n  padding: 30px;\n`;\n\nexport const FormContainer = styled.div`\n  flex: 1;\n  border: 2px solid black;\n  display: flex;\n  justify-content: center;\n  box-shadow: rgb(241 55 55 / 40%) 0px 0px 17px 9px;\n`;\n\nexport const ListContainer = styled.div`\n  flex: 1;\n  border: 2px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: rgb(241 55 55 / 40%) 0px 0px 17px 9px;\n`;\n\nexport const PageTitle = styled.h1`\n  font-weight: 500;\n  text-align: center;\n  font-size: 45px;\n  line-height: 1.334;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 25px;\n  line-height: 1.334;\n  padding-top: 15px;\n`;\n","import React, { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { operationFetchContacts } from 'redux/contacts/operations';\nimport { selectisLoading } from 'redux/contacts/selectors';\nimport { selectError } from 'redux/contacts/selectors';\nimport { PageContainer, PageTitle, FormContainer, ListContainer, Title } from './ContactsPage.styles';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectisLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operationFetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <Error />}\n\n      <PageContainer>\n        <PageTitle>Phonebook</PageTitle>\n        <div style={{ display: 'flex', gap: '5px' }}>\n          <FormContainer>\n            <ContactForm />\n          </FormContainer>\n          <ListContainer>\n            <Title>Contacts</Title>\n            <Filter />\n            <ContactList />\n          </ListContainer>\n        </div>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","FormContainer","_templateObject3","FormEl","_templateObject4","InputContainer","_templateObject5","Input","Field","_templateObject6","InputText","_templateObject7","FormButton","_templateObject8","ErrMessage","ErrorMessage","_templateObject9","contactSchema","Yup","shape","name","matches","min","max","required","number","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsx","Formik","initialValues","id","nanoid","validationSchema","onSubmit","values","actions","newContact","some","_ref","toLowerCase","alert","concat","finalContact","operationAddContact","addNewContact","resetForm","children","_jsxs","Form","placeholder","component","type","List","ContactItem","CardWrapper","ButtonClose","InfoWrapper","Name","Phone","contact","onClick","operationDeleteContact","ContactList","selectVisiableContacts","map","item","ContactCard","FilterWrapper","InputFilter","Filter","filter","selectFilter","value","onChange","e","setFilter","target","Error","error","selectError","PageContainer","ListContainer","PageTitle","ContactsPage","isLoading","selectisLoading","useEffect","operationFetchContacts","_Fragment","Loader","style","display","gap"],"sourceRoot":""}